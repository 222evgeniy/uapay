<?php
/**
 * DealDetailsHandlerPaymentDetailsConfirmation
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Server\Model
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * UAPAY EscrowBox
 *
 * Escrow box from UAPAY
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Swagger\Server\Model;

use Symfony\Component\Validator\Constraints as Assert;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Annotation\SerializedName;

/**
 * Class representing the DealDetailsHandlerPaymentDetailsConfirmation model.
 *
 * @package Swagger\Server\Model
 * @author  Swagger Codegen team
 */
class DealDetailsHandlerPaymentDetailsConfirmation 
{
        /**
     * @var string|null
     * @SerializedName("type")
     * @Assert\Choice({ "LOOKUP", "3DS" })
     * @Assert\Type("string")
     * @Type("string")
     */
    protected $type;

    /**
     * @var int|null
     * @SerializedName("attemptsLeft")
     * @Assert\Type("int")
     * @Type("int")
     */
    protected $attemptsLeft;

    /**
     * @var string|null
     * @SerializedName("url")
     * @Assert\Type("string")
     * @Type("string")
     */
    protected $url;

    /**
     * @var array|null
     * @SerializedName("form")
     * @Assert\Type("array")
     * @Type("array")
     */
    protected $form;

    /**
     * @var string|null
     * @SerializedName("redirectUrl")
     * @Assert\Type("string")
     * @Type("string")
     */
    protected $redirectUrl;

    /**
     * Constructor
     * @param mixed[] $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->type = isset($data['type']) ? $data['type'] : null;
        $this->attemptsLeft = isset($data['attemptsLeft']) ? $data['attemptsLeft'] : null;
        $this->url = isset($data['url']) ? $data['url'] : null;
        $this->form = isset($data['form']) ? $data['form'] : null;
        $this->redirectUrl = isset($data['redirectUrl']) ? $data['redirectUrl'] : null;
    }

    /**
     * Gets type.
     *
     * @return string|null
     */
    public function getType()
    {
        return $this->type;
    }

    /**
     * Sets type.
     *
     * @param string|null $type
     *
     * @return $this
     */
    public function setType($type = null)
    {
        $this->type = $type;

        return $this;
    }

    /**
     * Gets attemptsLeft.
     *
     * @return int|null
     */
    public function getAttemptsLeft()
    {
        return $this->attemptsLeft;
    }

    /**
     * Sets attemptsLeft.
     *
     * @param int|null $attemptsLeft
     *
     * @return $this
     */
    public function setAttemptsLeft($attemptsLeft = null)
    {
        $this->attemptsLeft = $attemptsLeft;

        return $this;
    }

    /**
     * Gets url.
     *
     * @return string|null
     */
    public function getUrl()
    {
        return $this->url;
    }

    /**
     * Sets url.
     *
     * @param string|null $url
     *
     * @return $this
     */
    public function setUrl($url = null)
    {
        $this->url = $url;

        return $this;
    }

    /**
     * Gets form.
     *
     * @return array|null
     */
    public function getForm()
    {
        return $this->form;
    }

    /**
     * Sets form.
     *
     * @param array|null $form
     *
     * @return $this
     */
    public function setForm(array $form = null)
    {
        $this->form = $form;

        return $this;
    }

    /**
     * Gets redirectUrl.
     *
     * @return string|null
     */
    public function getRedirectUrl()
    {
        return $this->redirectUrl;
    }

    /**
     * Sets redirectUrl.
     *
     * @param string|null $redirectUrl
     *
     * @return $this
     */
    public function setRedirectUrl($redirectUrl = null)
    {
        $this->redirectUrl = $redirectUrl;

        return $this;
    }
}


